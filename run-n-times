#!/bin/bash

# Default increment value
i=1

# Function to display usage information
usage() {
  echo "Usage: run-n-times -n <number_of_times> [-i <initial_value>] -- <command_to_run>"
  echo ""
  echo "  -n <number_of_times>   Number of times to run the command (required)"
  echo "  -i <initial_value>     Initial value for \$i variable (default: 1, supports leading zeros)"
  echo "  -- <command_to_run>    Command to execute, with optional arguments"
  echo ""
  echo "Examples:"
  echo ""
  echo "run-n-times -n 5 -- bash -c 'echo \"Hello world: \$i\"'"
  echo "run-n-times -n 5 -i 001 -- bash -c 'echo \"Hello world: \$i\"'"
  echo ""
  exit 0
}

# Parse options
while getopts ":n:i:" opt; do
  case $opt in
    n)
      N=$OPTARG
      ;;
    i)
      i=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      usage
      ;;
  esac
done

# Shift parsed options
shift $((OPTIND -1))

# Check for required arguments
if [ -z "$N" ] || [ $# -eq 0 ]; then
  usage
fi

# Extract the command to run
COMMAND=("$@")

# Determine padding width for i
PAD_WIDTH=${#i}

# Export i for child processes
export i

# Execute the command N times
for ((j=1; j<=N; j++)); do
  # Run the command with current i value
  "${COMMAND[@]}"
  if [ $? -ne 0 ]; then
    echo "Command failed on increment #$i. Exiting."
    exit 1
  fi
  # Increment i with zero-padding
  i=$(printf "%0${PAD_WIDTH}d" $((10#$i + 1)))
done
